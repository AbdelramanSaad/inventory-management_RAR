{
    "openapi": "3.0.0",
    "info": {
        "title": "Inventory Management and Audit System API",
        "description": "A comprehensive API for inventory management with audit logging, role-based access control, and real-time notifications",
        "contact": {
            "name": "API Support",
            "email": "admin@inventory-system.com"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Inventory Management API Server"
        },
        {
            "url": "http://localhost:8000/api",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/audit-logs": {
            "get": {
                "tags": [
                    "Audit Logs"
                ],
                "summary": "List audit logs",
                "description": "Returns a paginated list of audit logs with filtering options",
                "operationId": "auditLogIndex",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by audit log type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "item_created",
                                "item_updated",
                                "item_deleted",
                                "stock_adjusted"
                            ]
                        }
                    },
                    {
                        "name": "warehouse_id",
                        "in": "query",
                        "description": "Filter by warehouse ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "inventory_item_id",
                        "in": "query",
                        "description": "Filter by inventory item ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AuditLogResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user and get JWT token",
                "description": "Authenticates user and returns JWT token",
                "operationId": "authLogin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@inventory.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "email": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "password": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user account",
                "operationId": "authRegister",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "warehouse_manager",
                                            "staff"
                                        ],
                                        "example": "warehouse_manager"
                                    },
                                    "warehouse_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully registered"
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "email": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "password": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "role": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "warehouse_id": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Invalidates the JWT token",
                "operationId": "authLogout",
                "responses": {
                    "200": {
                        "description": "User successfully signed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully signed out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh JWT token",
                "description": "Refreshes the JWT token",
                "operationId": "authRefresh",
                "responses": {
                    "200": {
                        "description": "Token successfully refreshed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/user-profile": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user profile",
                "description": "Returns the authenticated user's profile information",
                "operationId": "authUserProfile",
                "responses": {
                    "200": {
                        "description": "User profile information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "john@example.com"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "warehouse_manager"
                                        },
                                        "warehouse_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/inventory-items": {
            "get": {
                "tags": [
                    "Inventory Items"
                ],
                "summary": "List inventory items",
                "description": "Returns a paginated list of inventory items with filtering options",
                "operationId": "inventoryItemIndex",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "electronics",
                                "furniture",
                                "clothing",
                                "other"
                            ]
                        }
                    },
                    {
                        "name": "warehouse_id",
                        "in": "query",
                        "description": "Filter by warehouse ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "below_min_stock",
                        "in": "query",
                        "description": "Filter items with quantity below min_stock_level",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in name or description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/InventoryItemResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Inventory Items"
                ],
                "summary": "Create a new inventory item",
                "description": "Creates a new inventory item with image upload",
                "operationId": "inventoryItemStore",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Laptop XPS 15"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Dell XPS 15 laptop with 16GB RAM"
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "min_stock_level": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "unit_price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1299.99
                                    },
                                    "category": {
                                        "type": "string",
                                        "enum": [
                                            "electronics",
                                            "furniture",
                                            "clothing",
                                            "other"
                                        ],
                                        "example": "electronics"
                                    },
                                    "warehouse_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Inventory item created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/InventoryItemResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/inventory-items/{id}": {
            "get": {
                "tags": [
                    "Inventory Items"
                ],
                "summary": "Get inventory item details",
                "description": "Returns details of a specific inventory item",
                "operationId": "inventoryItemShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inventory item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/InventoryItemResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Inventory item not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Inventory Items"
                ],
                "summary": "Update an inventory item",
                "description": "Updates an existing inventory item including stock adjustment",
                "operationId": "inventoryItemUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inventory item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Laptop XPS 15"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated Dell XPS 15 laptop with 32GB RAM"
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 15
                                    },
                                    "min_stock_level": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "unit_price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1499.99
                                    },
                                    "category": {
                                        "type": "string",
                                        "enum": [
                                            "electronics",
                                            "furniture",
                                            "clothing",
                                            "other"
                                        ],
                                        "example": "electronics"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Inventory item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Inventory item updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Inventory item not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Inventory Items"
                ],
                "summary": "Delete an inventory item",
                "description": "Soft deletes an inventory item (admin only)",
                "operationId": "inventoryItemDestroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inventory item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inventory item deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Inventory item deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Only admins can delete inventory items"
                    },
                    "404": {
                        "description": "Inventory item not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AuditLogResource": {
                "title": "Audit Log Resource",
                "description": "Audit log resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "item_created",
                            "item_updated",
                            "item_deleted",
                            "stock_adjusted"
                        ],
                        "example": "item_created"
                    },
                    "description": {
                        "type": "string",
                        "example": "Created inventory item: Laptop XPS 15"
                    },
                    "user_name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "warehouse": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Main Warehouse"
                            },
                            "location": {
                                "type": "string",
                                "example": "New York"
                            }
                        },
                        "type": "object"
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "John Doe"
                            }
                        },
                        "type": "object"
                    },
                    "inventory_item": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Laptop XPS 15"
                            }
                        },
                        "type": "object"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-06-09T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "InventoryItemResource": {
                "title": "Inventory Item Resource",
                "description": "Inventory item resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Laptop XPS 15"
                    },
                    "description": {
                        "type": "string",
                        "example": "Dell XPS 15 laptop with 16GB RAM"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 10
                    },
                    "min_stock_level": {
                        "type": "integer",
                        "example": 5
                    },
                    "unit_price": {
                        "type": "number",
                        "format": "float",
                        "example": 1299.99
                    },
                    "category": {
                        "type": "string",
                        "enum": [
                            "electronics",
                            "furniture",
                            "clothing",
                            "other"
                        ],
                        "example": "electronics"
                    },
                    "image": {
                        "type": "string",
                        "example": "inventory/2023-06-09/user_1_laptop.jpg"
                    },
                    "image_url": {
                        "type": "string",
                        "example": "http://localhost:8000/storage/inventory/2023-06-09/user_1_laptop.jpg"
                    },
                    "is_low_stock": {
                        "type": "boolean",
                        "example": false
                    },
                    "warehouse": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Main Warehouse"
                            },
                            "location": {
                                "type": "string",
                                "example": "New York"
                            }
                        },
                        "type": "object"
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "John Doe"
                            }
                        },
                        "type": "object"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-06-09T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-06-09T12:30:00Z"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "User Resource",
                "description": "User resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "admin",
                            "warehouse_manager",
                            "inventory_clerk"
                        ],
                        "example": "admin"
                    },
                    "warehouse_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-06-09T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-06-09T12:30:00Z"
                    }
                },
                "type": "object"
            },
            "WarehouseResource": {
                "title": "Warehouse Resource",
                "description": "Warehouse resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Main Warehouse"
                    },
                    "location": {
                        "type": "string",
                        "example": "123 Storage St, Warehouse City"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-06-09T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-06-09T12:30:00Z"
                    }
                },
                "type": "object"
            },
            "AuditLogBasicResource": {
                "title": "Audit Log Resource",
                "description": "Audit log resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "type": {
                        "type": "string",
                        "example": "item_created"
                    },
                    "description": {
                        "type": "string",
                        "example": "Created new inventory item"
                    },
                    "warehouse_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "inventory_item_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "InventoryItemModelResource": {
                "title": "Inventory Item Resource",
                "description": "Inventory item resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "warehouse_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Laptop"
                    },
                    "description": {
                        "type": "string",
                        "example": "Dell XPS 15"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 10
                    },
                    "min_stock_level": {
                        "type": "integer",
                        "example": 5
                    },
                    "unit_price": {
                        "type": "number",
                        "format": "float",
                        "example": 1200.5
                    },
                    "category": {
                        "type": "string",
                        "example": "electronics"
                    },
                    "image": {
                        "type": "string",
                        "example": "https://example.com/laptop.jpg",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UserModelResource": {
                "title": "User Resource",
                "description": "User resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "role": {
                        "type": "string",
                        "example": "admin"
                    },
                    "warehouse_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "WarehouseModelResource": {
                "title": "Warehouse Resource",
                "description": "Warehouse resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Main Warehouse"
                    },
                    "location": {
                        "type": "string",
                        "example": "123 Storage St, City"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "tags": [
        {
            "name": "Audit Logs",
            "description": "API Endpoints for audit logs"
        },
        {
            "name": "Inventory Items",
            "description": "API Endpoints for inventory items management"
        },
        {
            "name": "Authentication",
            "description": "API Endpoints for user authentication"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ]
}